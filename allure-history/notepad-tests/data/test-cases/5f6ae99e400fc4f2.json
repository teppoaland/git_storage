{"uid":"5f6ae99e400fc4f2","name":"test_008_enter_filename","fullName":"tests.test_notepad.TestNotepadAutomation#test_008_enter_filename","historyId":"1e4c839177d5dfb66982d41e92de3ab1","time":{"start":1759058953796,"stop":1759058970202,"duration":16406},"description":"TC008: Verify filename can be entered in Save As dialog","descriptionHtml":"<p>TC008: Verify filename can be entered in Save As dialog</p>\n","status":"failed","statusMessage":"AssertionError: Could not retrieve entered filename\nassert None is not None","statusTrace":"self = <test_notepad.TestNotepadAutomation object at 0x00000257F0C50250>\n\n    @azure_work_item(38)\n    def test_008_enter_filename(self):\n        \"\"\"TC008: Verify filename can be entered in Save As dialog\"\"\"\n        print(\"TEST 008: Enter Filename\")\n    \n        # Setup - full Save As dialog setup\n        assert self.start_notepad(), \"Prerequisite failed: Could not start Notepad\"\n    \n        edit_field = self.get_text_editor()\n        edit_field.send_keys(\"Test content\")\n    \n        file_menu = self.driver.find_element(By.NAME, \"File\")\n        file_menu.click()\n        time.sleep(1)\n    \n        save_as_item = self.driver.find_element(By.XPATH, \"//*[contains(@Name, 'Save As')]\")\n        save_as_item.click()\n        time.sleep(3)\n    \n        assert self.create_desktop_session(), \"Failed to create desktop session\"\n    \n        save_dialog = WebDriverWait(self.desktop_session, 10).until(\n            EC.presence_of_element_located((By.NAME, \"Save As\"))\n        )\n    \n        # Try multiple approaches to find filename field\n        filename_field = None\n        for attempt in range(3):\n            try:\n                filename_field = save_dialog.find_element(By.CLASS_NAME, \"Edit\")\n                if filename_field.is_enabled():\n                    break\n            except:\n                time.sleep(1)\n    \n        if not filename_field:\n            filename_field = WebDriverWait(self.desktop_session, 5).until(\n                EC.element_to_be_clickable((By.CLASS_NAME, \"Edit\"))\n            )\n    \n        time.sleep(2)\n        filename_field.clear()\n        filename_field.send_keys(self.filename)\n        time.sleep(3)\n    \n        # Take screenshot after entering filename\n        self.take_screenshot(\"test_008_enter_filename\", \"filename_entered\")\n    \n        # Verify filename was entered\n        entered_filename = filename_field.get_attribute(\"value\")\n    \n        # Assertions for Azure DevOps\n>       assert entered_filename is not None, \"Could not retrieve entered filename\"\nE       AssertionError: Could not retrieve entered filename\nE       assert None is not None\n\ntests\\test_notepad.py:410: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestNotepadAutomation","time":{"start":1759058953794,"stop":1759058953795,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"testStage":{"description":"TC008: Verify filename can be entered in Save As dialog","status":"failed","statusMessage":"AssertionError: Could not retrieve entered filename\nassert None is not None","statusTrace":"self = <test_notepad.TestNotepadAutomation object at 0x00000257F0C50250>\n\n    @azure_work_item(38)\n    def test_008_enter_filename(self):\n        \"\"\"TC008: Verify filename can be entered in Save As dialog\"\"\"\n        print(\"TEST 008: Enter Filename\")\n    \n        # Setup - full Save As dialog setup\n        assert self.start_notepad(), \"Prerequisite failed: Could not start Notepad\"\n    \n        edit_field = self.get_text_editor()\n        edit_field.send_keys(\"Test content\")\n    \n        file_menu = self.driver.find_element(By.NAME, \"File\")\n        file_menu.click()\n        time.sleep(1)\n    \n        save_as_item = self.driver.find_element(By.XPATH, \"//*[contains(@Name, 'Save As')]\")\n        save_as_item.click()\n        time.sleep(3)\n    \n        assert self.create_desktop_session(), \"Failed to create desktop session\"\n    \n        save_dialog = WebDriverWait(self.desktop_session, 10).until(\n            EC.presence_of_element_located((By.NAME, \"Save As\"))\n        )\n    \n        # Try multiple approaches to find filename field\n        filename_field = None\n        for attempt in range(3):\n            try:\n                filename_field = save_dialog.find_element(By.CLASS_NAME, \"Edit\")\n                if filename_field.is_enabled():\n                    break\n            except:\n                time.sleep(1)\n    \n        if not filename_field:\n            filename_field = WebDriverWait(self.desktop_session, 5).until(\n                EC.element_to_be_clickable((By.CLASS_NAME, \"Edit\"))\n            )\n    \n        time.sleep(2)\n        filename_field.clear()\n        filename_field.send_keys(self.filename)\n        time.sleep(3)\n    \n        # Take screenshot after entering filename\n        self.take_screenshot(\"test_008_enter_filename\", \"filename_entered\")\n    \n        # Verify filename was entered\n        entered_filename = filename_field.get_attribute(\"value\")\n    \n        # Assertions for Azure DevOps\n>       assert entered_filename is not None, \"Could not retrieve entered filename\"\nE       AssertionError: Could not retrieve entered filename\nE       assert None is not None\n\ntests\\test_notepad.py:410: AssertionError","steps":[],"attachments":[{"uid":"7218aa98162fa69d","name":"stdout","source":"7218aa98162fa69d.txt","type":"text/plain","size":165}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":true,"stepsCount":0,"attachmentStep":false,"hasContent":true},"afterStages":[{"name":"_xunit_setup_method_fixture_TestNotepadAutomation::0","time":{"start":1759058971143,"stop":1759058977301,"duration":6158},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_notepad"},{"name":"subSuite","value":"TestNotepadAutomation"},{"name":"host","value":"DESKTOP-0K69VMV"},{"name":"thread","value":"5492-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_notepad"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"5f6ae99e400fc4f2.json","parameterValues":[]}